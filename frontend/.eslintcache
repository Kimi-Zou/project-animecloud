[{"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/index.js":"1","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/App.js":"2","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/index.js":"3","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/csrf.js":"4","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/session.js":"5","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Navigation/index.js":"6","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Navigation/ProfileButton.js":"7","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Home/index.js":"8","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Home/HomeNavigation.js":"9","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/LoginFormModal/index.js":"10","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js":"11","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/context/Modal.js":"12","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/SignupFormModal/index.js":"13","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/SignupFormModal/SignupForm.js":"14","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/UploadTrack/index.js":"15","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/UploadTrack/TrackChooser.js":"16","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/UploadTrack/TrackForm.js":"17","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/index.js":"18","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/ProfileHeader.js":"19","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/ProfileMeta.js":"20","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/ProfileTracks.js":"21","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/index.js":"22","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/player.js":"23","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/user.js":"24","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/track.js":"25","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/index.js":"26","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/ModularDiscover.js":"27","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/ModularDiscoverArtist.js":"28","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/ModularDiscoverTrack.js":"29","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerControls.js":"30","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/context/MusicPlayerContext.js":"31","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerProgressBar.js":"32","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerVolume.js":"33","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerInfo.js":"34"},{"size":1195,"mtime":1608858075549,"results":"35","hashOfConfig":"36"},{"size":2476,"mtime":1609551107682,"results":"37","hashOfConfig":"36"},{"size":1045,"mtime":1609261932215,"results":"38","hashOfConfig":"36"},{"size":1124,"mtime":1608775814078,"results":"39","hashOfConfig":"36"},{"size":1987,"mtime":1609305693721,"results":"40","hashOfConfig":"36"},{"size":1846,"mtime":1609027845962,"results":"41","hashOfConfig":"36"},{"size":2243,"mtime":1609548956906,"results":"42","hashOfConfig":"36"},{"size":1962,"mtime":1609190732677,"results":"43","hashOfConfig":"36"},{"size":787,"mtime":1608865819785,"results":"44","hashOfConfig":"36"},{"size":655,"mtime":1608941082784,"results":"45","hashOfConfig":"36"},{"size":2024,"mtime":1608941182966,"results":"46","hashOfConfig":"36"},{"size":1281,"mtime":1609388752772,"results":"47","hashOfConfig":"36"},{"size":661,"mtime":1608869821948,"results":"48","hashOfConfig":"36"},{"size":2918,"mtime":1608943622072,"results":"49","hashOfConfig":"36"},{"size":779,"mtime":1609129946160,"results":"50","hashOfConfig":"36"},{"size":753,"mtime":1609008370026,"results":"51","hashOfConfig":"36"},{"size":4141,"mtime":1609487809067,"results":"52","hashOfConfig":"36"},{"size":1301,"mtime":1609551072978,"results":"53","hashOfConfig":"36"},{"size":546,"mtime":1609399660752,"results":"54","hashOfConfig":"36"},{"size":848,"mtime":1609399904434,"results":"55","hashOfConfig":"36"},{"size":6263,"mtime":1609486400561,"results":"56","hashOfConfig":"36"},{"size":1708,"mtime":1609480903500,"results":"57","hashOfConfig":"36"},{"size":2633,"mtime":1609484428837,"results":"58","hashOfConfig":"36"},{"size":1899,"mtime":1609550455715,"results":"59","hashOfConfig":"36"},{"size":1559,"mtime":1609361609566,"results":"60","hashOfConfig":"36"},{"size":629,"mtime":1609302847641,"results":"61","hashOfConfig":"36"},{"size":1230,"mtime":1609362717660,"results":"62","hashOfConfig":"36"},{"size":1229,"mtime":1609551348272,"results":"63","hashOfConfig":"36"},{"size":1768,"mtime":1609486710102,"results":"64","hashOfConfig":"36"},{"size":2465,"mtime":1609480719465,"results":"65","hashOfConfig":"36"},{"size":3317,"mtime":1609485654222,"results":"66","hashOfConfig":"36"},{"size":1110,"mtime":1609476448985,"results":"67","hashOfConfig":"36"},{"size":810,"mtime":1609393756055,"results":"68","hashOfConfig":"36"},{"size":887,"mtime":1609480719466,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1bo1b5v",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/index.js",[],["147","148"],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/App.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/index.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/csrf.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/session.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Navigation/index.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Navigation/ProfileButton.js",["149"],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Home/index.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Home/HomeNavigation.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/LoginFormModal/index.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/context/Modal.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/SignupFormModal/index.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/SignupFormModal/SignupForm.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/UploadTrack/index.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/UploadTrack/TrackChooser.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/UploadTrack/TrackForm.js",["150"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport * as trackActions from \"../../store/track\";\nimport * as playerActions from \"../../store/player\";\n\n//-----------------------------------------------------\nconst TrackForm = ({ setDisplayForm, trackData, user }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // Remove extension from track name\n  const name = trackData.name.replace(/\\.[^/.]+$/, \"\");\n\n  // State\n  const [title, setTitle] = useState(name);\n  const [description, setDescription] = useState(\"\");\n  const [cover, setCover] = useState();\n  const [disableSave, setDisableSave] = useState(false);\n\n  // Handlers -----------------------------------------\n  // Submit form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setDisableSave(true)\n    const data = new FormData();\n\n    data.append(\"trackFile\", trackData);\n    data.append(\"trackTitle\", title);\n    data.append(\"trackDescription\", description);\n    data.append(\"trackCover\", cover);\n\n    // for (let pair of data.entries()) {\n    //   console.log(pair[0]+ ', ' + pair[1]); \n    // } // Debug\n\n    const res = await fetch(\"/api/tracks/create\", {\n      method: \"POST\",\n      headers: {\n        'XSRF-Token': Cookies.get('XSRF-TOKEN')\n      },\n      body: data,\n    });\n\n    if (res.ok) {\n      dispatch(trackActions.getTracks())\n    }\n\n    history.push(`/${user.username}/profile`);\n  }\n\n  // Preview cover image\n  const readUrl = (input) => {\n    if (input.files && input.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        document.getElementById('cover-preview').src = e.target.result;\n      }\n      reader.readAsDataURL(input.files[0]);\n    }\n  }\n\n  // Component -----------------------------------------\n  return (\n    <div className=\"upload__outer-container form__outer-container\">\n      <div className=\"upload__inner-container form__container\">\n        <div className=\"form__heading\">Track info</div>\n        <form \n          id=\"track-form\"\n          className=\"form\" \n          onSubmit={handleSubmit} \n        >\n          <div className=\"form__cover\">\n            <div className=\"cover__display\">\n              {cover && <img id=\"cover-preview\" alt=\"cover-preview\"/>}\n            </div>\n            <label className=\"cover-choose__input\">\n              <i className=\"fas fa-camera\"></i>\n              Upload image\n              <input \n                name=\"cover\"\n                type=\"file\" \n                accept=\".png,.jpg,.jpeg\"\n                onChange={(e) => {readUrl(e.target); setCover(e.target.files[0])}}\n              />\n            </label>\n          </div>\n          <div className=\"form__info\">\n            <div className=\"info__div\">\n              <label className=\"info__label\">\n                <span className=\"label__text\">Title</span>\n              </label>\n              <input \n                className=\"info__input\" \n                type=\"text\" \n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </div>\n            <div className=\"info__div\">\n              <label className=\"info__label\">Description</label>\n              <textarea \n                className=\"info__textarea info__input\" \n                placeholder=\"Describe your track\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </div>\n          </div>\n        </form>\n        <div className=\"form__footer\">\n          <div className=\"footer__note\">\n            <span className=\"note__text\">Required fields</span>\n          </div>\n          <div className=\"form__buttons\">\n            <button type=\"button\" className=\"form__button-cancel form__buttons\" onClick={() => setDisplayForm(false)}>Cancel</button>\n            <button type=\"submit\" form=\"track-form\" className=\"form__button-save form__buttons\" disabled={disableSave}>Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TrackForm;","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/index.js",["151"],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/ProfileHeader.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/ProfileMeta.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Profile/ProfileTracks.js",["152","153","154","155","156"],"import { useEffect, useState, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport WaveSurfer from 'wavesurfer.js';\nimport CursorPlugin from 'wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js';\n\nimport { MusicPlayerContext } from \"../../context/MusicPlayerContext\";\nimport * as playerActions from \"../../store/player\";\nimport \"./Profile.css\"; \n\n// --------------------------------------------------------------------\nconst ProfileTracks = ({ user, track, index }) => {\n  const dispatch = useDispatch();\n\n  //----------------    States    -------------------\n  // Global states\n  const [wave, setWave] = useState();\n  const [onPlay, setOnPlay] = useState(false);\n  const sessionUser = useSelector(state => state.session.user); \n  const playerState = useSelector(state => state.player); \n  const audio = playerState.audioNode;\n  const playing = playerState.playing;\n  const currentSong = playerState.currentSong;\n  const time = playerState.audioTime;\n\n  // Context \n  const { \n    setCurrentTime, currentTime, duration\n  } = useContext(MusicPlayerContext)\n  \n  //----------------    Helper functions    -------------------\n  // 1. Calculate track release time\n  const calTime = () => {\n    const currentTime = Date.now();\n    const trackCreatedTime = new Date(track.updatedAt);\n    const timeDifference = (currentTime - trackCreatedTime)/(1000*3600*24);\n    const releaseTime = Math.floor(timeDifference);\n    if(releaseTime < 1) return \"less than 1 day\";\n    return `${releaseTime} days ago`;\n  }\n\n  // 2. Set current song\n  const setSong = () => {\n    if (currentSong.id !== track.id) {\n      dispatch(playerActions.setCurrentSong(track));\n    }\n  }\n\n  // 3. Toggle Audio Playing state\n  const toggleAudio = () => {\n    // audio.current.paused && !onPlay ? audio.current.play() : audio.current.pause();\n    if (audio.current.paused && !onPlay) {\n      audio.current.currentTime = time;\n      audio.current.play();\n    } else {\n      audio.current.currentTime = time;\n      audio.current.pause();\n    }\n  }\n\n  // 4. Update playing state in store\n  const togglePlayingState = () => {\n    if (playing && onPlay) {\n      dispatch(playerActions.togglePlaying(playerState));\n      if (wave) wave.pause();\n    };\n      if (!playing && !onPlay) {\n        dispatch(playerActions.togglePlaying(playerState));\n        if(wave) wave.play();\n      }\n  }\n\n  // 5. Toggle button according to state\n  const toggleButton = () => playing ? setOnPlay(false) : setOnPlay(true);\n\n\n  //----------------    Event Listeners   -------------------\n  useEffect(() => {\n    if (!currentSong) return;\n    if (currentSong && currentSong.id !== track.id) {\n      setOnPlay(false);\n      if(wave) wave.stop();\n      if(audio.current) audio.current.currentTime = 0;\n      dispatch(playerActions.saveAudioTime(0));\n    } else {\n      if (!playing) {\n        if (wave) wave.pause();\n        setOnPlay(false);\n      } else {\n        if(wave) wave.play();\n        setOnPlay(true);\n      }\n    }\n  }, [currentSong])\n  \n  useEffect(() => {\n    if(!currentSong) return;\n    if(currentSong.id === track.id) {\n      if (playing) {\n        if(wave) wave.play();\n        setOnPlay(true);\n      } else {\n        if (wave) wave.pause();\n        setOnPlay(false);\n      }\n    }\n  }, [playing])\n\n  useEffect(() => {\n    const wavesurfer = WaveSurfer.create({\n      container: `#waveform-${user.id}-${index}`,\n      waveColor: \"#999\",\n      progressColor: '#333',\n      barWidth: 3,\n      cursorColor: \"white\",\n      height: 100,\n      plugins: [\n        CursorPlugin.create({\n          position: \"absolute\",\n          zIndex: 4,\n          borderRightColor: '#333',\n          opacity: '0.5',\n          height: 100\n        })\n      ]\n    }) \n    wavesurfer.load(track.trackPath);\n    wavesurfer.setMute(true);\n    wavesurfer.on(\"seek\", (position) => {\n      const currentTime = position * wavesurfer.getDuration();\n      setCurrentTime(currentTime);\n      if(audio.current) audio.current.currentTime = currentTime;\n    }) \n    dispatch(playerActions.saveWaveform(wave));\n    setWave(wavesurfer);\n    return () => { \n      const waveContainer = document.getElementById(`waveform-${user.id}-${index}`);\n      if(waveContainer) waveContainer.innerHTML = \"\";\n    }    \n  }, [])\n\n  //---------------- Component -------------------\n  return (\n    <div className=\"profile-track\">\n      <div className=\"profile-track__cover\">\n        {track.coverImg && \n          <img className=\"profile-track__cover-img\" \n          src={`${track.coverImg}`} \n          alt=\"test\"/>\n        }\n      </div>\n      <div className=\"profile-track__music-player\">\n        <div className=\"profile-player__top\">\n          <div className=\"profile-player__top-left\">\n            <div className=\"profile-player__play-icon\" onClick={() => { \n              audio.current.src = track.trackPath;\n              setSong(); \n              toggleAudio(); \n              togglePlayingState(); \n              toggleButton();\n            }}>\n            { \n              onPlay \n              ? <i className=\"fas fa-pause-circle fa-4x\" /> \n              : <i className=\"fas fa-play-circle fa-4x\" />\n            }\n            </div>\n            <div className=\"profile-player__name\">\n              <div className=\"profile-player__name-user\">{user.displayName}</div>\n              <div className=\"profile-player__name-track\">{track.title}</div>\n            </div>\n          </div>\n          <div className=\"profile-player__date\">{calTime()}</div>\n        </div>\n        <div className=\"profile-player__middle\" id={`waveform-${user.id}-${index}`} />\n        <div className=\"profile-player__bottom\">\n          {sessionUser.id === user.id && \n            <div className=\"profile-player__edits\">\n              <button type=\"button\" className=\"profile-player__edit-button profile-player__edit-buttons\">Edit</button>\n              <button type=\"button\" className=\"profile-player__delete-button profile-player__edit-buttons\">Delete</button>\n            </div>}\n          <div></div>\n          <div className=\"profile-player__likes-comments\">\n            <i className=\"fas fa-heart\"></i>\n            <i className=\"fas fa-comment-alt\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileTracks;","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/index.js",["157","158"],"import React, { useEffect, useContext, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport PlayerControls from \"./PlayerControls\";\nimport PlayerProgressBar from \"./PlayerProgressBar\";\nimport PlayerVolume from \"./PlayerVolume\";\nimport PlayerInfo from './PlayerInfo';\n\nimport * as playerActions from \"../../store/player\";\nimport { MusicPlayerContext } from \"../../context/MusicPlayerContext\";\nimport \"./MusicPlayer.css\";\n\n//-------------------------------------------------\nconst MusicPlayer = ({ user }) => {\n  const dispatch = useDispatch();\n  const audioRef = useRef(); // Create a Ref Object\n\n  // Context \n  const { setCurrentTime, setDuration, handleEnd } = useContext(MusicPlayerContext) \n\n  // States\n  const playerState = useSelector(state => state.player); \n  // const [trackSrc, setTrackSrc] = useState(\"\");\n  // const audioSrc = playerState.audioSrc;\n\n\n  // Save the <audio> DOM into Global State\n  useEffect(() => dispatch(playerActions.saveAudioNode(audioRef)), []);\n\n\n  return (\n    <div className=\"player-container\">\n      <audio \n        onTimeUpdate={(e) => {setCurrentTime(e.target.currentTime); dispatch(playerActions.saveAudioTime(e.target.currentTime))}} // currentTime has been updated\n        onCanPlay={(e) => setDuration(e.target.duration)} // The browser can play the media\n        onEnded={handleEnd} // When media reacheds the end\n        crossOrigin=\"anonymous\"\n\n        ref={audioRef} \n        type=\"audio/mpeg\" \n        preload=\"true\"\n        src={playerState.audioSrc} \n      />\n      <PlayerControls />\n      <PlayerProgressBar />\n      <PlayerVolume />\n      <PlayerInfo user={user}/>\n    </div>\n  )\n}\n\nexport default MusicPlayer;","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/player.js",["159"],"//---------------- State -------------------\nconst initialState = { \n  waveform: null,\n  audioNode: null,\n  audioTime: 0,\n  audioSrc: \"\",\n  audioTime: 0,\n  currentSong: {id: -1},\n  playlist: [],\n  repeat: false,\n  random: false,\n  playing: false,\n};\n\n// Action Types:\nconst SET_AUDIO_SRC = \"player/SET_AUDIO_SRC\"\nconst SET_CURRENT_SONG = \"player/SET_CURRENT_SONG\";\nconst TOGGLE_RANDOM = \"player/TOGGLE_RANDOM\";\nconst TOGGLE_REPEAT = \"player/TOGGLE_OPTIONS\";\nconst TOGGLE_PLAYING = \"player/TOGGLE_PLAYING\";\nconst SAVE_AUDIO_NODE = \"player/SAVE_AUDIO\";\nconst SAVE_AUDIO_TIME = \"player/SAVE_AUDIO_TIME\";\nconst SAVE_WAVEFORM = \"player/SAVE_WAVEFORM\";\n\n// POJO actions:\n// 0. Set audio source\nexport const setAudioSrc = (path) => ({\n  type: SET_AUDIO_SRC,\n  payload: path\n})\n\n// 1. Set current song\nexport const setCurrentSong = (song) => ({\n  type: SET_CURRENT_SONG,\n  payload: song\n})\n\n// 2. Toggle random state\nexport const toggleRandom = (state) => ({\n  type: TOGGLE_RANDOM,\n  payload: state.random ? false : true\n})\n\n// 3. Toggle repeat state\nexport const toggleRepeat = (state) => ({\n  type: TOGGLE_REPEAT,\n  payload: state.repeat ? false : true\n})\n\n// 4. Toggle playing state\nexport const togglePlaying = (state) => ({ \n  type: TOGGLE_PLAYING, \n  payload: state.playing ? false : true \n});\n\n// 5. Save Audio Node\nexport const saveAudioNode = (audioNode) => ({\n  type: SAVE_AUDIO_NODE,\n  payload: audioNode\n})\n\n// 6. Save Audio Time\nexport const saveAudioTime = (time) => ({\n  type: SAVE_AUDIO_TIME,\n  payload: time\n})\n\n// 7. Save waveform element\nexport const saveWaveform = (waveform) => ({\n  type: SAVE_WAVEFORM,\n  payload: waveform\n})\n\n//---------------- Reducer -------------------\nconst playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUDIO_SRC:\n      return {\n        ...state,\n        audioSrc: action.payload\n      }\n    case SET_CURRENT_SONG:\n      return {\n        ...state,\n        currentSong: action.payload,\n      }\n    case TOGGLE_RANDOM:\n      return {\n        ...state,\n        random: action.payload\n      }\n    case TOGGLE_REPEAT:\n      return {\n        ...state,\n        repeat: action.payload\n      }\n    case TOGGLE_PLAYING:\n      return {\n        ...state,\n        playing: action.payload\n      }\n    case SAVE_AUDIO_NODE:\n      return {\n        ...state,\n        audioNode: action.payload\n      }\n    case SAVE_AUDIO_TIME:\n      return {\n        ...state,\n        audioTime: action.payload\n      }\n    case SAVE_WAVEFORM: \n      return {\n        ...state,\n        waveform: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default playerReducer;","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/user.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/store/track.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/index.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/ModularDiscover.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/ModularDiscoverArtist.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/Discover/ModularDiscoverTrack.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerControls.js",["160"],"import { useContext, useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { MusicPlayerContext } from \"../../context/MusicPlayerContext\";\nimport \"./MusicPlayer.css\";\n\nconst PlayerControls = () => {\n  const { \n    prevSong, \n    nextSong,\n    togglePlayingState, \n    toggleRandomState,\n    toggleRepeatState,\n  } = useContext(MusicPlayerContext)\n\n  // States\n  const playerState = useSelector(state => state.player); \n  const currentSong = playerState.currentSong;\n  const audio = playerState.audioNode;\n  const randomOn = playerState.random;\n  const repeatOn = playerState.repeat;\n  const [activeRandom, setActiveRandom] = useState(\"\"); // css\n  const [activeRepeat, setActiveRepeat] = useState(\"\"); // css\n  const [disabledOn, setDisabledOn] = useState(true);\n\n\n  // Helper Functions\n  const toggleAudio = () => {\n    audio.current.paused ? audio.current.play() : audio.current.pause();\n  }\n\n  // Event Listeners\n  // 1. Change random button color\n  useEffect(() => {\n    if (randomOn)  setActiveRandom(\"controls__random--active\");\n    if (!randomOn) setActiveRandom(\"\");\n  }, [randomOn])\n\n  // 2. Change repeat button color\n  useEffect(() => {\n    if (repeatOn)  setActiveRepeat(\"controls__repeat--active\");\n    if (!repeatOn) setActiveRepeat(\"\");\n  }, [repeatOn])\n\n  // 3. Enable control buttons\n  useEffect(() => {\n    if(currentSong.id > -1) setDisabledOn(false);\n  }, [currentSong])\n\n  return (\n    <div className=\"player__controls-session\">\n      <button className=\"controls__previous controls\" onClick={prevSong} disabled={disabledOn}>\n        <i className=\"fas fa-step-backward\" />\n      </button>\n      <button className=\"controls__play controls\" onClick={() => { togglePlayingState(); toggleAudio(); } } disabled={disabledOn}>\n        { playerState.playing \n          ? <i className=\"fas fa-pause\" /> \n          : <i className=\"fas fa-play\" />}\n      </button>\n      <button className=\"controls__next controls\" onClick={nextSong} disabled={disabledOn}>\n        <i className=\"fas fa-step-forward\" />\n      </button>\n      <div className=\"controls__shuffle controls\" onClick={toggleRandomState}>\n        <i className={`fas fa-random ${activeRandom}`}></i>\n      </div>\n      <div className=\"controls__loop controls\" onClick={toggleRepeatState}>\n        <i className={`fas fa-redo-alt ${activeRepeat}`}></i>\n      </div>\n    </div>\n  )\n};\n\nexport default PlayerControls;","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/context/MusicPlayerContext.js",["161","162"],"import React, { useEffect, useRef, useState } from \"react\"; \nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as playerActions from \"../store/player\";\n\n//------------------------------------------------------------------------------\n\nexport const MusicPlayerContext = React.createContext(); // 1. Create Context\nconst MusicPlayerContextProvider = ({ children }) => { // 2. Create a Context Provider\n  const dispatch = useDispatch(); // Get dispatch function\n\n  //---------------- States -------------------\n  // 1. Global\n  const playerState = useSelector(state => state.player); \n  const {  \n    currentSong, \n    playlist, \n    playing,\n    repeat, \n    random,\n    audioNode,\n  } = useSelector(state => state.player); \n  // 2. Local\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(0.3);\n\n  //---------------- Helper Functions -------------------\n  // 1. Play prev song \n  const prevSong = () => {\n    if (playlist.length === 0 && currentSong) {\n      replaySong();\n    } else {\n      if (currentSong === 0) {\n        dispatch(playerActions.setCurrentSong(playlist.length - 1));\n      } else {\n        dispatch(playerActions.setCurrentSong(currentSong - 1));\n      }\n    }\n  }\n\n  // 2. Play next song \n  const nextSong = () => {\n    if (playlist.length === 0 && currentSong) {\n      replaySong(); \n    } else {\n      if (currentSong === playlist.length - 1) {\n        dispatch(playerActions.setCurrentSong(0));\n      } else {\n        dispatch(playerActions.setCurrentSong(currentSong + 1));\n      }\n    }\n  }\n\n  // 3. Toggle playing state: Play/Pause\n  const togglePlayingState = () => {\n    dispatch(playerActions.togglePlaying(playerState))\n  }\n\n  // 4. Toggle shuffle \n  const toggleRandomState = () => {\n    dispatch(playerActions.toggleRandom(playerState));\n  }\n\n  // 5. Toggle loop \n  const toggleRepeatState = () => {\n    dispatch(playerActions.toggleRepeat(playerState));\n  }\n\n  // 6. Handle end of song \n  const handleEnd = () => {\n    if (playlist.length === 0) {\n      if (repeat) {\n        replaySong(); \n      } else {\n        audioNode.current.currentTime = 0; \n        togglePlayingState();\n      }\n    } else {\n      if (random) {\n        let randomIndex = parseInt(Math.random() * playlist.length);\n        dispatch(playerActions.setCurrentSong(randomIndex));\n      }\n      if (repeat) {\n        nextSong();\n      } else nextSong();\n    }\n  }\n\n  // 7. Calculate progress bar time\n  const fmtMSS = (s) => {\n    return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + parseInt(s);\n  }\n\n  // 8. Replay song\n  const replaySong = () => {\n    if(!playing) dispatch(playerActions.togglePlaying(playerState))\n    audioNode.current.currentTime = 0;\n    audioNode.current.play();\n  }\n\n  //---------------- Render -------------------\n  return (\n    <>\n      <MusicPlayerContext.Provider  \n        value={{\n          currentTime, setCurrentTime,\n          duration, setDuration,\n          volume, setVolume,\n          prevSong, nextSong,\n          togglePlayingState,\n          toggleRandomState,\n          toggleRepeatState,\n          handleEnd,\n          fmtMSS,\n        }}\n      >\n        {children}\n      </MusicPlayerContext.Provider>\n      \n    </>\n  )\n};\n\nexport default MusicPlayerContextProvider;","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerProgressBar.js",["163"],"import { useContext, useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { MusicPlayerContext } from \"../../context/MusicPlayerContext\";\nimport \"./MusicPlayer.css\";\n\nconst PlayerProgressBar = () => {\n  const { \n    currentTime, \n    setCurrentTime,\n    duration, \n    fmtMSS\n  } = useContext(MusicPlayerContext)\n\n  // States\n  const playerState = useSelector(state => state.player); \n  const audio = playerState.audioNode;  \n\n  // Helper Functions\n  const handleProgress = (e) => {\n    let compute = (e.target.value * duration) / 100;\n    setCurrentTime(compute);\n    audio.current.currentTime = compute;\n  }\n\n  //---------------- Render -------------------\n  return (\n    <div className=\"player__progress-session\">\n      <span className=\"progress__current-time\">{fmtMSS(currentTime)}</span>\n      <input \n        type=\"range\" name=\"progressBar\" id=\"prgbar\" \n        onChange={handleProgress}\n        value={duration ? (currentTime * 100) / duration : 0}\n      />\n      <span className=\"progress__total-time\">{fmtMSS(duration)}</span>\n    </div>\n  )\n};\n\nexport default PlayerProgressBar;","/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerVolume.js",[],"/Users/kimiris/Desktop/App-Academy/w16 - solo/authenticate-me/frontend/src/components/MusicPlayer/PlayerInfo.js",["164","165","166"],"import { useContext, useEffect } from 'react';\nimport { MusicPlayerContext } from \"../../context/MusicPlayerContext\";\nimport { useSelector } from \"react-redux\";\n\n\nconst PlayerInfo = () => {\n  const playerState = useSelector(state => state.player); \n  const currentViewUser = useSelector(state => state.user.currentViewUser); \n  const currentSong = playerState.currentSong;\n\n  return (\n    <div className=\"player__track-info-session\"> \n      <div className=\"track-info__cover\">\n        {currentSong && <img className=\"track-info__cover-img\" src={currentSong.coverImg} alt=\"current song cover\"/>}\n      </div>\n      <div className=\"track-info__name\">\n        <div className=\"track-info__name-user\">{currentViewUser.displayName}</div>\n        <div className=\"track-info__name-track\">{currentSong && currentSong.title}</div>\n      </div>\n    </div>\n  )\n};\n\nexport default PlayerInfo;",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":8,"column":13,"nodeType":"173","messageId":"174","endLine":8,"endColumn":24},{"ruleId":"171","severity":1,"message":"175","line":7,"column":13,"nodeType":"173","messageId":"174","endLine":7,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":25,"column":6,"nodeType":"178","endLine":25,"endColumn":16,"suggestions":"179"},{"ruleId":"171","severity":1,"message":"180","line":27,"column":21,"nodeType":"173","messageId":"174","endLine":27,"endColumn":32},{"ruleId":"171","severity":1,"message":"181","line":27,"column":34,"nodeType":"173","messageId":"174","endLine":27,"endColumn":42},{"ruleId":"176","severity":1,"message":"182","line":93,"column":6,"nodeType":"178","endLine":93,"endColumn":19,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"184","line":106,"column":6,"nodeType":"178","endLine":106,"endColumn":15,"suggestions":"185"},{"ruleId":"176","severity":1,"message":"186","line":139,"column":6,"nodeType":"178","endLine":139,"endColumn":8,"suggestions":"187"},{"ruleId":"171","severity":1,"message":"188","line":1,"column":48,"nodeType":"173","messageId":"174","endLine":1,"endColumn":56},{"ruleId":"176","severity":1,"message":"177","line":28,"column":68,"nodeType":"178","endLine":28,"endColumn":70,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":7,"column":3,"nodeType":"192","messageId":"193","endLine":7,"endColumn":12},{"ruleId":"171","severity":1,"message":"194","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":24},{"ruleId":"171","severity":1,"message":"195","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"196","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":34},{"ruleId":"171","severity":1,"message":"188","line":1,"column":22,"nodeType":"173","messageId":"174","endLine":1,"endColumn":30},{"ruleId":"171","severity":1,"message":"197","line":1,"column":10,"nodeType":"173","messageId":"174","endLine":1,"endColumn":20},{"ruleId":"171","severity":1,"message":"195","line":1,"column":22,"nodeType":"173","messageId":"174","endLine":1,"endColumn":31},{"ruleId":"171","severity":1,"message":"198","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":28},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'userActions' is defined but never used.","Identifier","unusedVar","'playerActions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'currentTime' is assigned a value but never used.","'duration' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'audio', 'dispatch', 'playing', 'track.id', and 'wave'. Either include them or remove the dependency array.",["202"],"React Hook useEffect has missing dependencies: 'currentSong', 'track.id', and 'wave'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has missing dependencies: 'audio', 'dispatch', 'index', 'setCurrentTime', 'track.trackPath', 'user.id', and 'wave'. Either include them or remove the dependency array.",["204"],"'useState' is defined but never used.",["205"],"no-dupe-keys","Duplicate key 'audioTime'.","ObjectExpression","unexpected","'setCurrentSong' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'MusicPlayerContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [dispatch, username]",{"range":"216","text":"217"},"Update the dependencies array to be: [audio, currentSong, dispatch, playing, track.id, wave]",{"range":"218","text":"219"},"Update the dependencies array to be: [currentSong, playing, track.id, wave]",{"range":"220","text":"221"},"Update the dependencies array to be: [audio, dispatch, index, setCurrentTime, track.trackPath, user.id, wave]",{"range":"222","text":"223"},"Update the dependencies array to be: [dispatch]",{"range":"224","text":"225"},[787,797],"[dispatch, username]",[3001,3014],"[audio, currentSong, dispatch, playing, track.id, wave]",[3274,3283],"[currentSong, playing, track.id, wave]",[4258,4260],"[audio, dispatch, index, setCurrentTime, track.trackPath, user.id, wave]",[1019,1021],"[dispatch]"]